##
# WP docker compose file.
#
# @since 1.0.0
#
# Docker is not aware of this file's location.
# Please use the `--file` option when running `docker compose`.
#
# @note PLEASE DO NOT EDIT THIS FILE!
# This file and the contents of it are updated automatically.
# Instead of editing this file, please edit `./.wp-docker.prj.yml`.
##
# ---------------------------------------------------------------------------------------------------------------------
# macOS Docker installation for compatibility with this configuration.
# ---------------------------------------------------------------------------------------------------------------------
# $ brew install --cask docker;
# $ brew install chipmk/tap/docker-mac-net-connect;
# $ sudo brew services start chipmk/tap/docker-mac-net-connect;
# ---------------------------------------------------------------------------------------------------------------------

# ---------------------------------------------------------------------------------------------------------------------
# Regarding chipmk/tap/docker-mac-net-connect; # {@see https://o5p.me/Q9hnml}.
# ---------------------------------------------------------------------------------------------------------------------
# It is non-obvious from below, but the `docker-mac-net-connect` service is making it possible for
# every container to be accessed by it's own individual IP address. That's a huge, huge, huge feature.
# ---------------------------------------------------------------------------------------------------------------------

version  : '3.9' # {@see https://o5p.me/TtD60s}.

networks :
    network :
        external    : false
        attachable  : false
        enable_ipv6 : false
        driver      : 'bridge'
        name        : '${X_COMPOSE_PROJECT_SLUG}-network'
        ipam        :
            driver : 'default'
            config :
                -
                    subnet  : '172.72.0.0/16'
                    gateway : '172.72.0.1'
volumes  :
    sql-data :
        name : '${X_COMPOSE_PROJECT_SLUG}-sql-data'
    php-data :
        name : '${X_COMPOSE_PROJECT_SLUG}-php-data'
    nxp-data :
        name : '${X_COMPOSE_PROJECT_SLUG}-nxp-data'

services :
    sql : # MySQL database server.
        container_name : '${X_COMPOSE_PROJECT_SLUG}-sql'
        hostname       : '${X_COMPOSE_PROJECT_SLUG}-sql'
        domainname     : 'wp' # i.e., `${X_COMPOSE_PROJECT_SLUG}-sql.wp`.
        image          : 'mysql:latest'
        dns            :
            - '1.1.1.1'        # Cloudflare.
            - '8.8.8.8'        # Google.
            - '8.8.4.4'        # Google.
            - '208.67.222.222' # OpenDNS.
            - '208.67.220.220' # OpenDNS.
        expose         :
            - '3306'
            - '33060' # {@see https://o5p.me/2PWGCV}.
        networks       :
            - 'network'
        volumes        :
            - 'sql-data:/var/lib/mysql'
        environment    : # MySQL configuration; {@see https://o5p.me/U2TlUH}.
            MYSQL_ROOT_PASSWORD : 'wordpress' # MySQL root user password.
            MYSQL_USER          : 'wordpress' # WordPress database username.
            MYSQL_PASSWORD      : 'wordpress' # WordPress database password.
            MYSQL_DATABASE      : 'wordpress' # WordPress database name.

        command        : '--default-authentication-plugin=mysql_native_password'
        healthcheck    :
            test     : 'mysql --user=root --password=wordpress --execute "SHOW DATABASES" || exit 1'
            interval : '3s'
            timeout  : '30s'
            retries  : 10

    mem : # Memcached server.
        container_name : '${X_COMPOSE_PROJECT_SLUG}-mem'
        hostname       : '${X_COMPOSE_PROJECT_SLUG}-mem'
        domainname     : 'wp' # i.e., `${X_COMPOSE_PROJECT_SLUG}-mem.wp`.
        image          : 'memcached:latest'
        dns            :
            - '1.1.1.1'        # Cloudflare.
            - '8.8.8.8'        # Google.
            - '8.8.4.4'        # Google.
            - '208.67.222.222' # OpenDNS.
            - '208.67.220.220' # OpenDNS.
        expose         :
            - '11211'
        networks       :
            - 'network'
        command        : '' # Ditch default CMD.
        # {@see https://o5p.me/siDlED} for config details. 16MB of RAM.
        entrypoint     : 'memcached -m 16 -vv;'
        healthcheck    : # Could not install netcat on this image.
            test     : '( cat /proc/1/status | grep memcached ) || exit 1'
            interval : '3s'
            timeout  : '30s'
            retries  : 10

    hog : # Mailhog server.
        container_name : '${X_COMPOSE_PROJECT_SLUG}-hog'
        hostname       : '${X_COMPOSE_PROJECT_SLUG}-hog'
        domainname     : 'wp' # i.e., `${X_COMPOSE_PROJECT_SLUG}-hog.wp`.
        image          : 'mailhog/mailhog:latest'
        dns            :
            - '1.1.1.1'        # Cloudflare.
            - '8.8.8.8'        # Google.
            - '8.8.4.4'        # Google.
            - '208.67.222.222' # OpenDNS.
            - '208.67.220.220' # OpenDNS.
        expose         :
            - '1025' # SMTP server.
            - '8025' # Web interface.
        networks       :
            - 'network'
        logging        :
            driver : 'none'  # Too noisy.
        environment    :
            # Proxy configuration settings; {@see https://o5p.me/FKFB99}.
            VIRTUAL_PORT     : '8025'                             # Virtual host for SSL proxy.
            VIRTUAL_PROTO    : 'http'                             # HTTP from proxy to origin.
            HTTPS_METHOD     : 'redirect'                         # Redirect HTTP requests to HTTPS.
            HSTS             : 'max-age=31536000'                 # Turn on, since we are redirecting.
            SSL_POLICY       : 'Mozilla-Modern'                   # TLSv1.3+; {@see https://o5p.me/g1XbSB}.
            VIRTUAL_HOST     : '${X_COMPOSE_PROJECT_SLUG}-hog.wp' # Virtual host FQDN to be accessed by browser.
            SELF_SIGNED_HOST : '${X_COMPOSE_PROJECT_SLUG}-hog.wp' # Same as `VIRTUAL_HOST`; wildcard SSL n/a here.

        healthcheck    : # This image has netcat installed already.
            test     : '( nc -z localhost 1025 && nc -z localhost 8025 ) || exit 1'
            interval : '3s'
            timeout  : '30s'
            retries  : 10

    php : # Apache/PHP/WordPress server.
        # How to install other PHP extensions; {@see https://o5p.me/8K3seT}.
        container_name : '${X_COMPOSE_PROJECT_SLUG}-php'
        hostname       : '${X_COMPOSE_PROJECT_SLUG}-php'
        domainname     : 'wp' # i.e., `${X_COMPOSE_PROJECT_SLUG}-php.wp`.
        image          : 'jaswrks/wp-docker:php${X_COMPOSE_PHP_VERSION}-apache'
        depends_on     :
            sql :
                condition : 'service_healthy'
            mem :
                condition : 'service_healthy'
            hog :
                condition : 'service_healthy'
        dns            :
            - '1.1.1.1'        # Cloudflare.
            - '8.8.8.8'        # Google.
            - '8.8.4.4'        # Google.
            - '208.67.222.222' # OpenDNS.
            - '208.67.220.220' # OpenDNS.
        expose         :
            - '80'
        networks       :
            - 'network'
        volumes        :
            - 'php-data:/var/www/html' # WordPress core installation data.
            - './:/x-host/project:ro' # Host's project directory (read-only).
        extra_hosts    :
            - '${X_COMPOSE_PROJECT_SLUG}.wp:127.0.0.1'
        environment    :
            # Proxy configuration settings; {@see https://o5p.me/FKFB99}.
            VIRTUAL_PORT                     : '80'                            # Virtual host for SSL proxy.
            VIRTUAL_PROTO                    : 'http'                          # HTTP from proxy to origin.
            HTTPS_METHOD                     : 'noredirect'                    # Does not redirect HTTP requests to HTTPS.
            HSTS                             : 'off'                           # Turn off since we aren't redirecting HTTP.
            SSL_POLICY                       : 'Mozilla-Modern'                # TLSv1.3+; {@see https://o5p.me/g1XbSB}.
            VIRTUAL_HOST                     : '.${X_COMPOSE_PROJECT_SLUG}.wp' # `.` at beginning matches exact name & wildcards.
            SELF_SIGNED_HOST                 : '${X_COMPOSE_PROJECT_SLUG}.wp'  # Root of `VIRTUAL_HOST` for wildcard SSL certs.

            # All of these get picked up by the WordPress core installer in `./.wp-docker.sh`.
            WORDPRESS_DB_HOST                : 'sql:3306'                       # Database container name:port.
            WORDPRESS_DB_USER                : 'wordpress'                      # WordPress database username.
            WORDPRESS_DB_PASSWORD            : 'wordpress'                      # WordPress database password.

            WORDPRESS_DB_NAME                : 'wordpress'                      # WordPress database name.
            WORDPRESS_TABLE_PREFIX           : 'wp_'                            # WordPress database table prefix.

            WORDPRESS_DB_CHARSET             : 'utf8mb4'                        # WordPress database charset.
            WORDPRESS_DB_COLLATE             : 'utf8mb4_unicode_ci'             # WordPress database collation.

            # This is a blog title; or site title in the case of a multisite network.
            X_WORDPRESS_SITE_TITLE           : 'WordPress'                      # WordPress site|blog title.

            # These are for the default administrative user.
            X_WORDPRESS_ADMIN_USERNAME       : '${USER:-wordpress}'             # WordPress administrative username.
            X_WORDPRESS_ADMIN_PASSWORD       : '${USER:-wordpress}'             # WordPress administrative password.
            X_WORDPRESS_ADMIN_EMAIL          : '${USER:-wordpress}@${X_COMPOSE_PROJECT_SLUG}.wp' # Admin email address.

            # One of: `` (default), `subdirectories`, or `subdomains`.
            X_WORDPRESS_MULTISITE_TYPE       : '${X_WORDPRESS_MULTISITE_TYPE:-}'

            # A comma-delimited list of plugin slugs, relative plugin zip file paths, or plugin zip file URLs.
            # All of these will be installed + activated automatically. If multisite, they'll be activated network-wide.
            X_WORDPRESS_INSTALL_PLUGINS      : '${X_WORDPRESS_INSTALL_PLUGINS:-}'

            # A single theme slug, relative theme zip file path, or URL leading to a theme zip file.
            # This will be installed + activated automatically on the main site only + enabled network-wide.
            # For themes, we need two settings. Path (which can be different things) + the installed theme's slug.
            X_WORDPRESS_INSTALL_THEME        : '${X_WORDPRESS_INSTALL_THEME:-}'
            X_WORDPRESS_INSTALLED_THEME_SLUG : '${X_WORDPRESS_INSTALLED_THEME_SLUG:-}'

            # This tells `.wp-docker.sh` to install everything; i.e., more than necessary.
            X_INSTALL_KITCHEN_SINK           : '${X_INSTALL_KITCHEN_SINK:-}'

            # The `:?` forces these environment variables to be non-empty. Compliments of docker compose.
            COMPOSE_PROJECT_NAME             : '${COMPOSE_PROJECT_NAME:?Missing `COMPOSE_PROJECT_NAME` environment variable.}'
            X_COMPOSE_PHP_VERSION            : '${X_COMPOSE_PHP_VERSION:?Missing `X_COMPOSE_PHP_VERSION` environment variable.}'
            X_COMPOSE_PROJECT_SLUG           : '${X_COMPOSE_PROJECT_SLUG:?Missing `X_COMPOSE_PROJECT_SLUG` environment variable.}'
            X_COMPOSE_PROJECT_TYPE           : '${X_COMPOSE_PROJECT_TYPE:?Missing `X_COMPOSE_PROJECT_TYPE` environment variable.}'
            X_COMPOSE_PROJECT_LAYOUT         : '${X_COMPOSE_PROJECT_LAYOUT:?Missing `X_COMPOSE_PROJECT_LAYOUT` environment variable.}'

        command        : '' # Ditch default CMD.
        entrypoint     : '/x-host/project/.wp-docker.sh'
        healthcheck    :
            test     : 'curl --fail http://localhost || exit 1'
            interval : '3s'
            timeout  : '30s'
            retries  : 10

    pma : # PhpMyAdmin for database administration.
        container_name : '${X_COMPOSE_PROJECT_SLUG}-pma'
        hostname       : '${X_COMPOSE_PROJECT_SLUG}-pma'
        domainname     : 'wp' # i.e., `${X_COMPOSE_PROJECT_SLUG}-pma.wp`.
        image          : 'phpmyadmin:latest'
        depends_on     :
            sql :
                condition : 'service_healthy'
            mem :
                condition : 'service_healthy'
            hog :
                condition : 'service_healthy'
        dns            :
            - '1.1.1.1'        # Cloudflare.
            - '8.8.8.8'        # Google.
            - '8.8.4.4'        # Google.
            - '208.67.222.222' # OpenDNS.
            - '208.67.220.220' # OpenDNS.
        expose         :
            - '80'
        networks       :
            - 'network'
        environment    :
            # Proxy configuration settings; {@see https://o5p.me/FKFB99}.
            VIRTUAL_PORT     : '80'                               # Virtual host for SSL proxy.
            VIRTUAL_PROTO    : 'http'                             # HTTP from proxy to origin.
            HTTPS_METHOD     : 'redirect'                         # Redirect HTTP requests to HTTPS.
            HSTS             : 'max-age=31536000'                 # Turn on, since we are redirecting.
            SSL_POLICY       : 'Mozilla-Modern'                   # TLSv1.3+; {@see https://o5p.me/g1XbSB}.
            VIRTUAL_HOST     : '${X_COMPOSE_PROJECT_SLUG}-pma.wp' # Virtual host FQDN to be accessed by browser.
            SELF_SIGNED_HOST : '${X_COMPOSE_PROJECT_SLUG}-pma.wp' # Same as `VIRTUAL_HOST`; wildcard SSL n/a here.

            # PhpMyAdmin configuration; {@see https://o5p.me/3k7NUm}.
            PMA_HOST         : 'sql'       # Database container name.
            PMA_PORT         : '3306'      # Database container port.
            MYSQL_USER       : 'wordpress' # WordPress database username.
            MYSQL_PASSWORD   : 'wordpress' # WordPress database password.

        healthcheck    :
            test     : 'curl --fail http://localhost || exit 1'
            interval : '3s'
            timeout  : '30s'
            retries  : 10

    nxp : # Nginx proxy for SSL access.
        container_name : '${X_COMPOSE_PROJECT_SLUG}-nxp'
        hostname       : '${X_COMPOSE_PROJECT_SLUG}'
        domainname     : 'wp' # i.e., `${X_COMPOSE_PROJECT_SLUG}.wp`.
        image          : 'nginxproxy/nginx-proxy:latest'
        depends_on     :
            sql :
                condition : 'service_healthy'
            mem :
                condition : 'service_healthy'
            hog :
                condition : 'service_healthy'
            php :
                condition : 'service_healthy'
            pma :
                condition : 'service_healthy'
        dns            :
            - '1.1.1.1'        # Cloudflare.
            - '8.8.8.8'        # Google.
            - '8.8.4.4'        # Google.
            - '208.67.222.222' # OpenDNS.
            - '208.67.220.220' # OpenDNS.
        expose         :
            - '80'
            - '443'
        networks       :
            - 'network'
        volumes        :
            - 'nxp-data:/etc/nginx/certs'
            - 'nxp-data:/etc/nginx/vhost.d'
            - '/var/run/docker.sock:/tmp/docker.sock:ro'

        environment    : # {@see https://o5p.me/bEtXkH}.
            DEFAULT_HOST : '${X_COMPOSE_PROJECT_SLUG}.wp'
            ENABLE_IPV6  : false # Disable for now.

        healthcheck    :
            test     : 'service nginx status || exit 1'
            interval : '3s'
            timeout  : '30s'
            retries  : 10

    nxc : # Nginx self-signed companion for nginx proxy.
        container_name : '${X_COMPOSE_PROJECT_SLUG}-nxc'
        hostname       : '${X_COMPOSE_PROJECT_SLUG}-nxc'
        domainname     : 'wp' # i.e., `${X_COMPOSE_PROJECT_SLUG}-nxc.wp`.
        image          : 'sebastienheyd/self-signed-proxy-companion:latest'
        depends_on     :
            sql :
                condition : 'service_healthy'
            mem :
                condition : 'service_healthy'
            hog :
                condition : 'service_healthy'
            php :
                condition : 'service_healthy'
            pma :
                condition : 'service_healthy'
            nxp :
                condition : 'service_healthy'
        dns            :
            - '1.1.1.1'        # Cloudflare.
            - '8.8.8.8'        # Google.
            - '8.8.4.4'        # Google.
            - '208.67.222.222' # OpenDNS.
            - '208.67.220.220' # OpenDNS.
        networks       :
            - 'network'
        volumes_from   :
            - 'nxp'
        volumes        : # Use our already-trusted CA.
            - './.ssl-i-ca-key.pem:/etc/nginx/certs/ca.key:ro'
            - './.ssl-i-ca-crt.pem:/etc/nginx/certs/ca.crt:ro'

        environment    : # {@see https://o5p.me/mTJ17Z}.
            NGINX_PROXY_CONTAINER : '${X_COMPOSE_PROJECT_SLUG}-nxp'
            DOCKER_HOST           : 'unix:///tmp/docker.sock'
            EXPIRATION            : 395 # {@see https://o5p.me/Fz1NWM}.

        healthcheck    :
            test     : 'bash -c "[ -f /etc/nginx/certs/${X_COMPOSE_PROJECT_SLUG}.wp.crt ]" || exit 1'
            interval : '3s'
            timeout  : '30s'
            retries  : 10
